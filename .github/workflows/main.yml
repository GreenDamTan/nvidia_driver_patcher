name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
env:
  VER_TARGET: 560.94
  BASEDIR: .
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:focal-20240530
      volumes:
        - /home/runner:/home/runner
      env:
        DOTNET_ROOT: /usr/share/dotnet
        DEBIAN_FRONTEND: noninteractive
        TZ: Asia/Shanghai
      options:
        --user root
    steps:
      - name: default info
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          cat /etc/os-release
          pwd
          ls -l
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: apt install
        run: |
          apt-get update
          ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          apt-get install wget curl sudo p7zip-full busybox bsdmainutils xxd xvfb ca-certificates -y --no-install-recommends
          sudo busybox --install
      - name: Install dotnet dependencies
        run: |
          wget --no-check-certificate https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          dpkg -i packages-microsoft-prod.deb
          rm packages-microsoft-prod.deb
          apt-get update
          apt-get install -y dotnet-runtime-8.0
          dotnet --list-runtimes
      - name: Install jsign
        run: |
          wget https://github.com/ebourg/jsign/releases/download/6.0/jsign_6.0_all.deb -O jsign_6.0_all.deb
          apt install -y ./jsign_6.0_all.deb
      - name: Install apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --install-recommends -y osslsigncode mscompress rename
      - name: set env
        run: |
          env
          DriverDir=${VER_TARGET}-desktop-win10-win11-64bit-international-dch-whql
          echo "DriverDir=${DriverDir}" >> $GITHUB_ENV
          echo "DisplayDriverDir=${BASEDIR}/${DriverDir}/Display.Driver" >> $GITHUB_ENV
          echo "displaydriverDir=${BASEDIR}/${DriverDir}/display.driver" >> $GITHUB_ENV
      - name: get env
        run: |
          env
          echo $DisplayDriverDir
      - name: Download Driver
        run: |
          curl "https://cn.download.nvidia.com/Windows/${VER_TARGET}/${DriverDir}.exe" -o ${DriverDir}.exe
          [ -e "${DriverDir}.exe" ] || echo "nvidia windows driver installer not found"
          md5sum ${DriverDir}.exe
      - name: unpack driver
        run: |
          which 7z &>/dev/null || echo "have not install p7zip-full for 7z tool (http://p7zip.sourceforge.net/)"
          echo "extracting the driver installer, please wait..."
          7z x -o${DriverDir} "${DriverDir}.exe"
      - name: Install patch.sh
        run: |
          chmod +x patch.sh
          ./patch.sh
      - name: gen and sign cat
        run: |
          mv ${DisplayDriverDir} ${displaydriverDir}
          for i in $( find ${displaydriverDir} -maxdepth 1 -name "*[A-Z]*" ); do mv -if "$i" "`echo $i | tr 'A-Z' 'a-z'`"; done
          for i in $( find ${displaydriverDir} -maxdepth 2 -name "*[A-Z]*" ); do mv -if "$i" "`echo $i | tr 'A-Z' 'a-z'`"; done
          for i in $( find ${displaydriverDir} -maxdepth 3 -name "*[A-Z]*" ); do mv -if "$i" "`echo $i | tr 'A-Z' 'a-z'`"; done
          for i in $( find ${displaydriverDir} -maxdepth 4 -name "*[A-Z]*" ); do mv -if "$i" "`echo $i | tr 'A-Z' 'a-z'`"; done
          dotnet ${BASEDIR}/tools/inf2cat/Inf2Cat.exe /driver:"${displaydriverDir}" /os:10_x64 /verbose
          mv ${displaydriverDir} ${DisplayDriverDir}
          jsign --keystore tools/cert.pfx --storetype PKCS12 --storepass GreenDamTan --tsaurl http://timestamp.digicert.com ${DisplayDriverDir}/nv_disp.cat
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
            name: driver
            path: /home/runner/work/nvidia_driver_patcher/nvidia_driver_patcher
            retention-days: 1
      - name: Upload artifact nvlddmkm.sys
        uses: actions/upload-artifact@master
        with:
          name: nvlddmkm.sys
          path: /home/runner/work/nvidia_driver_patcher/nvidia_driver_patcher/560.94-desktop-win10-win11-64bit-international-dch-whql/Display.Driver/nvlddmkm.sys
          retention-days: 1
      - name: Upload artifact nv_disp.cat
        uses: actions/upload-artifact@master
        with:
          name: nv_disp.cat
          path: /home/runner/work/nvidia_driver_patcher/nvidia_driver_patcher/560.94-desktop-win10-win11-64bit-international-dch-whql/Display.Driver/nv_disp.cat
          retention-days: 1